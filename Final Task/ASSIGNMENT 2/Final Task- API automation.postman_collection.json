{
	"info": {
		"_postman_id": "77afe147-2408-4807-9898-feea9529329c",
		"name": "Final Task: API automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "16214548"
	},
	"item": [
		{
			"name": "Verify GET data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseBody = pm.response.json();\r",
							"\r",
							"var firstName = pm.request.url.query.get('firstname');\r",
							"var lastName = pm.request.url.query.get('lastname');\r",
							"\r",
							"pm.test('Response contains correct user details', function() {\r",
							"    pm.expect(responseBody.args.firstname).to.eql(firstName);\r",
							"    pm.expect(responseBody.args.lastname).to.eql(lastName);\r",
							"});\r",
							"\r",
							"pm.test('Status code should be 200 OK', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/get?firstname=Mykyta&lastname=Makarenko",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "firstname",
							"value": "Mykyta"
						},
						{
							"key": "lastname",
							"value": "Makarenko"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify sent and response data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var requestBody = JSON.parse(pm.request.body.raw);\r",
							"var responseBody = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"}); \r",
							"\r",
							"pm.test(\"First name matches\", function () {\r",
							"    pm.expect(responseBody.data.firstname).to.equal(requestBody.firstname);\r",
							"});\r",
							"\r",
							"pm.test(\"Last name matches\", function () {\r",
							"    pm.expect(responseBody.data.lastname).to.equal(requestBody.lastname);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstname\": \"Mykyta\",\r\n  \"lastname\": \"Makarenko\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://postman-echo.com/post"
			},
			"response": []
		},
		{
			"name": "Verify Basic Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Authentication message is valid\", function () {\r",
							"    pm.response.to.have.jsonBody({ authenticated: true });\r",
							"});\r",
							"\r",
							"pm.test('Status code should be 200 OK', function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic cG9zdG1hbjpwYXNzd29yZA==",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://postman-echo.com/basic-auth"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "variable_key",
			"value": ""
		}
	]
}